{
	"argSwitch": "--",
	"argSeparator": "EQUALS",
	"parameters": [
		{
			"optionId": "configFileId",
			"cliArgument": "configFile",
			"environmentVar": "APP_CONFIG_FILE",
			"propertyName": "app.config.file",
			"defaultVal": "./config/application.properties",
			"description": "Application configuration properties file."
		},
		{
			"optionId": "commandId",
			"cliArgument": "command",
			"environmentVar": "CT_CLIENT_COMMAND",
			"propertyName": "client.command",
			"defaultVal": "userMustProvide",
			"description": "Command tag to execute."
		},
		{
			"optionId": "imageId",
			"cliArgument": "image",
			"environmentVar": "CT_CLIENT_IMAGE_FILE",
			"propertyName": "client.image.file",
			"defaultVal": "userMustProvide",
			"description": "Image file to send to the endpoint."
		},
		{
			"optionId": "imageTypeId",
			"cliArgument": "imageType",
			"environmentVar": "CT_CLIENT_IMAGE_TYPE",
			"propertyName": "client.image.type",
			"defaultVal": "userMustProvide",
			"description": "Image file type to send to the endpoint."
		},
		{
			"optionId": "inputId",
			"cliArgument": "input",
			"environmentVar": "CT_CLIENT_INPUT_FILE",
			"propertyName": "client.input.file",
			"defaultVal": "userMustProvide",
			"description": "File with data to send to the endpoint."
		},
		{
			"optionId": "outputId",
			"cliArgument": "output",
			"environmentVar": "CT_CLIENT_OUTPUT_FILE",
			"propertyName": "client.output.file",
			"defaultVal": "userMustProvide",
			"description": "File to write results returned from the endpoint."
		},
		{
			"optionId": "cloudRegionId",
			"cliArgument": "cloudRegion",
			"environmentVar": "CT_CLOUD_REGION",
			"propertyName": "cloud.region",
			"defaultVal": "userMustProvide",
			"description": "Region identifier for the cloud region where project is deployed."
		},
		{
			"optionId": "cloudProjectId",
			"cliArgument": "cloudProject",
			"environmentVar": "CT_CLOUD_PROJECT_ID",
			"propertyName": "cloud.project",
			"defaultVal": "userMustProvide",
			"description": "Cloud project owning the project's resources."
		},
		{
			"optionId": "userdbTestModeId",
			"cliArgument": "userdbTestMode",
			"environmentVar": "CT_USERDB_TEST_MODE",
			"propertyName": "user.auth.testMode",
			"defaultVal": "false",
			"description": "Flag to enable use of in-memory simulated database for testing."
		},
		{
			"optionId": "userdbHostId",
			"cliArgument": "userdbHost",
			"environmentVar": "CT_USERDB_HOST_IP",
			"propertyName": "user.auth.db.host",
			"defaultVal": "vtis-cloudtacts-userdb-mysql",
			"description": "Name or IP of host containing the user information table, e.g.: 'vtis-cloudtacts-userdb-mysql'."
		},
		{
			"optionId": "userdbPortId",
			"cliArgument": "userdbPort",
			"environmentVar": "CT_USERDB_PORT_NUM",
			"propertyName": "user.auth.db.port",
			"defaultVal": "3306",
			"description": "TCP port number of the service containing the user information table, e.g.: '3306'."
		},
		{
			"optionId": "userdbDatabaseId",
			"cliArgument": "userdbDatabase",
			"environmentVar": "CT_USERDB_DATABASE",
			"propertyName": "user.auth.db.database",
			"defaultVal": "cloudtacts",
			"description": "Name of the database containing the user information table, e.g.: 'cloudtacts'."
		},
		{
			"optionId": "userdbLoginId",
			"cliArgument": "userdbLogin",
			"environmentVar": "CT_USERDB_LOGIN_ID",
			"propertyName": "user.auth.db.username",
			"defaultVal": "root",
			"description": "System account or user login name for ihe user information database."
		},
		{
			"optionId": "userdbCredsId",
			"cliArgument": "userdbCreds",
			"environmentVar": "CT_USERDB_CREDENTIALS",
			"propertyName": "user.auth.db.password",
			"defaultVal": "userMustProvide",
			"description": "System account or user login passowrd for ihe user information database."
		},
		{
			"optionId": "userdbFunctionHostId",
			"cliArgument": "userdbFunctionHost",
			"environmentVar": "CT_USERDB_FUNCTION_HOST",
			"propertyName": "user.auth.function.host",
			"defaultVal": "localhost",
			"description": "The auth function host name or IP address."
		},
		{
			"optionId": "userdbFunctionPortId",
			"cliArgument": "userdbFunctionPort",
			"environmentVar": "CT_USERDB_FUNCTION_PORT",
			"propertyName": "user.auth.function.testPort",
			"defaultVal": "8088",
			"description": "The Cloud Functions test service binding port."
		},
		{
			"optionId": "userdbGetUserId",
			"cliArgument": "userdbGetUserFunction",
			"environmentVar": "CT_USERDB_GET_USER_FUNCTION",
			"propertyName": "user.auth.function.getUser",
			"defaultVal": "GetUser",
			"description": "The Cloud Functions target name for get user info."
		},
		{
			"optionId": "userdbAddUserId",
			"cliArgument": "userdbAddUserFunction",
			"environmentVar": "CT_USERDB_ADD_USER_FUNCTION",
			"propertyName": "user.auth.function.addUser",
			"defaultVal": "AddUser",
			"description": "The Cloud Functions target name for add user."
		},
		{
			"optionId": "userdbDeleteUserId",
			"cliArgument": "userdbDeleteUserFunction",
			"environmentVar": "CT_USERDB_DELETE_USER_FUNCTION",
			"propertyName": "user.auth.function.deleteUser",
			"defaultVal": "DeleteUser",
			"description": "The Cloud Functions target name for delete user."
		},
		{
			"optionId": "userdbUpdateUserId",
			"cliArgument": "userdbUpdateUserFunction",
			"environmentVar": "CT_USERDB_UPDATE_USER_FUNCTION",
			"propertyName": "user.auth.function.updateUser",
			"defaultVal": "UpdateUser",
			"description": "The Cloud Functions target name for update user."
		},
		{
			"optionId": "userdbValidateUserId",
			"cliArgument": "userdbValidateUserFunction",
			"environmentVar": "CT_USERDB_VALIDATE_USER_FUNCTION",
			"propertyName": "user.auth.function.validateUser",
			"defaultVal": "ValidateUser",
			"description": "The Cloud Functions target name for validate new user."
		},
		{
			"optionId": "userdbMaxPoolConnectionsId",
			"cliArgument": "userdbMaxPoolConnections",
			"environmentVar": "CT_USERDB_MAX_POOL_SIZE",
			"propertyName": "user.auth.max.pool",
			"defaultVal": "-1",
			"description": "Maximum connection pool size."
		},
		{
			"optionId": "userdbMaxIdleConnectionsId",
			"cliArgument": "userdbMaxIdleConnections",
			"environmentVar": "CT_USERDB_MAX_IDLE_SIZE",
			"propertyName": "user.auth.max.idle",
			"defaultVal": "2",
			"description": "Maximum number of idle connections."
		},
		{
			"optionId": "userdbMaxIdleTimeId",
			"cliArgument": "userdbMaxIdleTime",
			"environmentVar": "CT_USERDB_MAX_IDLE_TIME",
			"propertyName": "user.auth.max.idleTime",
			"defaultVal": "300",
			"description": "Maximum time in seconds for a connection to idle."
		},
		{
			"optionId": "userdbMaxLifeTimeId",
			"cliArgument": "userdbMaxLifeTime",
			"environmentVar": "CT_USERDB_MAX_LIFE_TIME",
			"propertyName": "user.auth.max.lifeTime",
			"defaultVal": "30",
			"description": "Maximum time in minutes for a connection to live."
		},
		{
			"optionId": "storageBucketNameId",
			"cliArgument": "storageBucketName",
			"environmentVar": "CT_STORAGE_BUCKET_NAME",
			"propertyName": "storage.bucketName",
			"defaultVal": "userMustProvide",
			"description": "Object storage bucket name to use by the application."
		}
	]
}
